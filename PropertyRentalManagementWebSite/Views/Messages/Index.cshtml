@model IEnumerable<PropertyRentalManagementWebSite.Models.Message>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Message1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SendDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Receiver)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Sender)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Message1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SendDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User1.UserName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.MessageId }) |
                @Html.ActionLink("Details", "Details", new { id = item.MessageId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.MessageId })
                @if (ViewBag.CurrentUserId == item.Receiver && ViewBag.CurrentUserId != item.Sender)
                {
                    @Html.ActionLink("Reply", "Create", new { replyToSenderId = item.Sender }, new { @class = "btn btn-secondary btn-sm" })
                    // Show Reply button
                    @*@Html.ActionLink("Reply", "CreateReply", new { receiverId = item.Sender, originalMessageId = item.MessageId }, new { @class = "btn btn-secondary btn-sm" })*@
                }
                @*@Html.ActionLink("Reply", "Create", new { replyToSenderId = item.Sender }, new { @class = "btn btn-secondary btn-sm" })*@





                @if (item.Receiver == ViewBag.CurrentUserId && item.Status.Description == "UnRead")
                {
                    using (Html.BeginForm("MarkAsRead", "Messages", new { messageId = item.MessageId }, FormMethod.Post, new { @class = "inline-form" }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="submit" value="Mark as Read" class="btn btn-primary btn-sm" />
                    }
                }
            </td>
        </tr>
    }


</table>
