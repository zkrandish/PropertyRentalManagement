@model IEnumerable<PropertyRentalManagementWebSite.Models.Appointment>

@{
    ViewBag.Title = "Index";
   
}

<h2>Index</h2>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.AppointmentDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.from)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.to)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Purpose)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Receiver)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Sender)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.AppointmentDate)
            </td>
            <td>
                @item.from.ToString(@"hh\:mm")
            </td>

            <td>
                @item.to.ToString(@"hh\:mm")
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Purpose)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User1.UserName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.AppointmentId }) |
                @Html.ActionLink("Details", "Details", new { id = item.AppointmentId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.AppointmentId })
              
                @if (item.Receiver == ViewBag.CurrentUserId && item.Status.Description == "UnRead")
                {
                    using (Html.BeginForm("MarkAsRead", "Appointments", new { appointmentId = item.AppointmentId }, FormMethod.Post, new { @class = "inline-form" }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="submit" value="Mark as Read" class="btn btn-primary btn-sm" />
                    }
                }

            </td>
        </tr>
    }

</table>
