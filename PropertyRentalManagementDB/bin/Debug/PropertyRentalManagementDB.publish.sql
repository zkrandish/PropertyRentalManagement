/*
Deployment script for PropertyRentalManagementDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "PropertyRentalManagementDB"
:setvar DefaultFilePrefix "PropertyRentalManagementDB"
:setvar DefaultDataPath "C:\Users\zkara\AppData\Local\Microsoft\VisualStudio\SSDT\"
:setvar DefaultLogPath "C:\Users\zkara\AppData\Local\Microsoft\VisualStudio\SSDT\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[Messages].[StatusId] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Messages])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[Users].[Email] is being dropped, data loss could occur.

The column [dbo].[Users].[UserName] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Users])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping Default Constraint unnamed constraint on [dbo].[Appointments]...';


GO
ALTER TABLE [dbo].[Appointments] DROP CONSTRAINT [DF__Appointme__Statu__01142BA1];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_Messages_StatusId]...';


GO
ALTER TABLE [dbo].[Messages] DROP CONSTRAINT [DF_Messages_StatusId];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users] DROP CONSTRAINT [DF__Users__UserName__47DBAE45];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users] DROP CONSTRAINT [DF__Users__Email__48CFD27E];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Apartments_Statuses]...';


GO
ALTER TABLE [dbo].[Apartments] DROP CONSTRAINT [FK_Apartments_Statuses];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Apartments_Tenants]...';


GO
ALTER TABLE [dbo].[Apartments] DROP CONSTRAINT [FK_Apartments_Tenants];


GO
PRINT N'Dropping Foreign Key unnamed constraint on [dbo].[Apartments]...';


GO
ALTER TABLE [dbo].[Apartments] DROP CONSTRAINT [FK__Apartment__UserI__30F848ED];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Appointments_Statuses]...';


GO
ALTER TABLE [dbo].[Appointments] DROP CONSTRAINT [FK_Appointments_Statuses];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Messages_Statuses]...';


GO
ALTER TABLE [dbo].[Messages] DROP CONSTRAINT [FK_Messages_Statuses];


GO
PRINT N'Altering Table [dbo].[Messages]...';


GO
ALTER TABLE [dbo].[Messages] DROP COLUMN [StatusId];


GO
PRINT N'Altering Table [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users] DROP COLUMN [Email], COLUMN [UserName];


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Apartments]...';


GO
ALTER TABLE [dbo].[Apartments] WITH NOCHECK
    ADD FOREIGN KEY ([ManagerId]) REFERENCES [dbo].[Users] ([UserId]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Apartments]...';


GO
ALTER TABLE [dbo].[Apartments] WITH NOCHECK
    ADD FOREIGN KEY ([TenantId]) REFERENCES [dbo].[Users] ([UserId]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Appointments]...';


GO
ALTER TABLE [dbo].[Appointments] WITH NOCHECK
    ADD FOREIGN KEY ([StatusId]) REFERENCES [dbo].[Statuses] ([StatusId]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Apartments'), OBJECT_ID(N'dbo.Appointments'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
